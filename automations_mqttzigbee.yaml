#automations_mqttzigbee.yaml

#In configuration.yaml add line below
#automation mqttzigbee: !include automations_mqttzigbee.yaml

##Replace 0x1234 with your device short id
##Sample motion sensor
#binary_sensor:
#- platform: mqtt
#  name: "Zigbee Motion Sensor"
#  state_topic: "tele/zigbee/0x1234/Occupancy"  
#  json_attributes_topic: "tele/zigbee/0xF874/Attr"
#  off_delay: 60
#  expire_after: 7200   #v0.100 and above
#  device_class: motion
#  
##Sample Temperature/Humidity/Pressure/Illuminance sensor 
#sensor:  
#- platform: mqtt
#  name: "ZigBee SQ Temperature"
#  state_topic: "tele/zigbee/0x0EB5/Temperature"
#  unit_of_measurement: "Â°C" 
#  expire_after: 7200
#  
#- platform: mqtt
#  name: "ZigBee SQ Humidity"
#  state_topic: "tele/zigbee/0x0EB5/Humidity"
#  unit_of_measurement: "RH%" 
#  expire_after: 7200
#  
#- platform: mqtt
#  name: "ZigBee SQ Pressure"
#  state_topic: "tele/zigbee/0x0EB5/Pressure"
#  unit_of_measurement: "hPa" 
#  expire_after: 7200
#  
#- platform: mqtt
#  name: "ZigBee Motion Illuminance"
#  state_topic: "tele/zigbee/0xF874/Illuminance"
#  unit_of_measurement: "lx" 
#  expire_after: 7200

- alias: 'MQTT Zigbee Humidity'
  initial_state: true
  hide_entity: true
  trigger:
    - platform: mqtt
      topic: 'tele/zigbee/RESULT'
  condition:
    - condition: template
      value_template: "{{ 'Humidity' in trigger.payload }}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'tele/zigbee/{{ trigger.payload_json | first }}/Humidity'
        payload: '{{ trigger.payload_json[trigger.payload_json | first].Humidity }}'

- alias: 'MQTT Zigbee Temperature'
  initial_state: true
  hide_entity: true
  trigger:
    - platform: mqtt
      topic: 'tele/zigbee/RESULT'
  condition:
    - condition: template
      value_template: "{{ 'Temperature' in trigger.payload }}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'tele/zigbee/{{ trigger.payload_json | first }}/Temperature'
        payload: '{{ trigger.payload_json[trigger.payload_json | first].Temperature }}'

- alias: 'MQTT Zigbee Pressure'
  initial_state: true
  hide_entity: true
  trigger:
    - platform: mqtt
      topic: 'tele/zigbee/RESULT'
  condition:
    - condition: template
      value_template: "{{ 'Pressure' in trigger.payload }}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'tele/zigbee/{{ trigger.payload_json | first }}/Pressure'
        payload: '{{ trigger.payload_json[trigger.payload_json | first].Pressure }}'


- alias: 'MQTT Zigbee Illuminance'
  initial_state: true
  hide_entity: true
  trigger:
    - platform: mqtt
      topic: 'tele/zigbee/RESULT'
  condition:
    - condition: template
      value_template: "{{ 'Illuminance' in trigger.payload }}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'tele/zigbee/{{ trigger.payload_json | first }}/Illuminance'
        payload: '{{ trigger.payload_json[trigger.payload_json | first].Illuminance }}'
        retain: true
        
- alias: 'MQTT Zigbee Occupancy'
  initial_state: true
  hide_entity: true
  trigger:
    - platform: mqtt
      topic: 'tele/zigbee/RESULT'
  condition:
    - condition: template
      value_template: "{{ 'Occupancy' in trigger.payload }}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'tele/zigbee/{{ trigger.payload_json | first }}/Occupancy'
        payload: 'ON'

- alias: 'MQTT Zigbee Attribute'
  initial_state: true
  hide_entity: true
  trigger:
    - platform: mqtt
      topic: 'tele/zigbee/RESULT'
  condition:
    - condition: template
      value_template: "{{ 'Battery' in trigger.payload }}"
    - condition: template
      value_template: "{{ 'Voltage' in trigger.payload }}"
  action:
    - service: mqtt.publish
      data_template:
        topic: 'tele/zigbee/{{ trigger.payload_json | first }}/Attr'
        payload: '{"voltage":{{ trigger.payload_json[trigger.payload_json | first].Voltage }},"battery level":{{ trigger.payload_json[trigger.payload_json | first].Battery}}}'
